// app/api/proxy/vehicles/route.ts
import { NextRequest, NextResponse } from 'next/server';

const EXTERNAL_API_BASE = process.env.EXTERNAL_API_BASE_URL || 'http://golfcar.go2kt.com:8080/api';

// ‡πÅ‡∏°‡∏õ‡∏™‡∏ñ‡∏≤‡∏ô‡∏∞‡∏à‡∏≤‡∏Å External API ‡∏Å‡∏•‡∏±‡∏ö‡∏°‡∏≤‡∏¢‡∏±‡∏á frontend
// ‡∏ï‡∏≠‡∏ô‡∏ô‡∏µ‡πâ External API ‡πÉ‡∏ä‡πâ‡∏™‡∏ñ‡∏≤‡∏ô‡∏∞‡πÄ‡∏î‡∏µ‡∏¢‡∏ß‡∏Å‡∏±‡∏ô‡∏Å‡∏±‡∏ö frontend ‡πÅ‡∏•‡πâ‡∏ß
function mapStatusFromExternalAPI(externalStatus: string): string {
  // ‡∏™‡∏≥‡∏´‡∏£‡∏±‡∏ö backward compatibility ‡∏Å‡∏±‡∏ö‡∏Ç‡πâ‡∏≠‡∏°‡∏π‡∏•‡πÄ‡∏Å‡πà‡∏≤
  const legacyStatusMap: { [key: string]: string } = {
    'inactive': 'maintenance', // inactive ‡πÄ‡∏Å‡πà‡∏≤ -> ‡∏£‡∏≠‡∏ã‡πà‡∏≠‡∏°
    'spare': 'retired',        // spare ‡πÄ‡∏Å‡πà‡∏≤ -> ‡πÄ‡∏™‡∏∑‡πà‡∏≠‡∏°‡πÅ‡∏•‡πâ‡∏ß
    'parked': 'ready'          // parked ‡πÄ‡∏Å‡πà‡∏≤ -> ‡∏û‡∏£‡πâ‡∏≠‡∏°‡πÉ‡∏ä‡πâ
  };
  
  // ‡∏ñ‡πâ‡∏≤‡πÄ‡∏õ‡πá‡∏ô‡∏™‡∏ñ‡∏≤‡∏ô‡∏∞‡πÄ‡∏Å‡πà‡∏≤ ‡πÉ‡∏´‡πâ‡πÅ‡∏°‡∏õ ‡∏ñ‡πâ‡∏≤‡πÑ‡∏°‡πà‡πÉ‡∏ä‡πà ‡πÉ‡∏´‡πâ‡πÉ‡∏ä‡πâ‡∏™‡∏ñ‡∏≤‡∏ô‡∏∞‡πÄ‡∏î‡∏¥‡∏°
  return legacyStatusMap[externalStatus] || externalStatus;
}

export async function GET(request: NextRequest) {
  try {
    console.log('üîÑ GET /api/proxy/vehicles - External API with improved error handling');
    
    // ‡πÉ‡∏ä‡πâ External API ‡∏û‡∏£‡πâ‡∏≠‡∏° error handling ‡∏ó‡∏µ‡πà‡∏î‡∏µ‡∏Ç‡∏∂‡πâ‡∏ô
    console.log('üåê Calling external API...');
    
    // ‡πÄ‡∏û‡∏¥‡πà‡∏° timeout ‡πÅ‡∏•‡∏∞ retry logic
    const controller = new AbortController();
    const timeoutId = setTimeout(() => controller.abort(), 30000); // 30 second timeout
    
    const response = await fetch(`${EXTERNAL_API_BASE}/vehicles`, {
      method: 'GET',
      headers: {
        'Content-Type': 'application/json',
      },
      signal: controller.signal,
    });

    clearTimeout(timeoutId);
    console.log('üåê External API response status:', response.status);

    if (response.ok) {
      const data = await response.json();
      console.log('‚úÖ External API success');
      console.log('üìù Total vehicles found:', data.length || data.data?.length || 0);
      
      // ‡πÅ‡∏°‡∏õ‡∏™‡∏ñ‡∏≤‡∏ô‡∏∞‡∏à‡∏≤‡∏Å External API ‡∏Å‡∏•‡∏±‡∏ö‡∏°‡∏≤‡∏¢‡∏±‡∏á frontend ‡∏™‡∏≥‡∏´‡∏£‡∏±‡∏ö‡∏ó‡∏∏‡∏Å‡∏£‡∏ñ
      if (Array.isArray(data)) {
        data.forEach(vehicle => {
          if (vehicle.status) {
            vehicle.status = mapStatusFromExternalAPI(vehicle.status);
          }
        });
      } else if (data.data && Array.isArray(data.data)) {
        data.data.forEach((vehicle: any) => {
          if (vehicle.status) {
            vehicle.status = mapStatusFromExternalAPI(vehicle.status);
          }
        });
      }
      
      return NextResponse.json(data);
    } else {
      console.log('‚ùå External API failed with status:', response.status);
      const errorText = await response.text();
      console.log('‚ùå Error response:', errorText);
      
      return NextResponse.json(
        { 
          success: false, 
          message: `External API failed with status ${response.status}`,
          details: errorText
        },
        { status: response.status }
      );
    }
  } catch (error) {
    console.error('‚ùå Error fetching vehicles from external API:', error);
    return NextResponse.json(
      { 
        success: false, 
        message: 'Failed to fetch vehicles from external API',
        details: error instanceof Error ? error.message : 'Unknown error'
      },
      { status: 500 }
    );
  }
}

export async function PUT(request: NextRequest) {
  try {
    const body = await request.json();
    console.log('üîÑ PUT /api/proxy/vehicles - External API with improved error handling');
    console.log('üìù Request body:', JSON.stringify(body, null, 2));
    
    // ‡πÉ‡∏ä‡πâ External API ‡∏û‡∏£‡πâ‡∏≠‡∏° error handling ‡∏ó‡∏µ‡πà‡∏î‡∏µ‡∏Ç‡∏∂‡πâ‡∏ô
    console.log('üåê Calling external API...');
    
    // ‡πÄ‡∏û‡∏¥‡πà‡∏° timeout
    const controller = new AbortController();
    const timeoutId = setTimeout(() => controller.abort(), 30000); // 30 second timeout
    
    const response = await fetch(`${EXTERNAL_API_BASE}/vehicles`, {
      method: 'PUT',
      headers: {
        'Content-Type': 'application/json',
      },
      body: JSON.stringify(body),
      signal: controller.signal,
    });

    clearTimeout(timeoutId);
    console.log('üåê External API response status:', response.status);

    if (response.ok) {
      const data = await response.json();
      console.log('‚úÖ External API success');
      return NextResponse.json(data);
    } else {
      console.log('‚ùå External API failed with status:', response.status);
      const errorText = await response.text();
      console.log('‚ùå Error response:', errorText);
      
      return NextResponse.json(
        { 
          success: false, 
          message: `External API failed with status ${response.status}`,
          details: errorText
        },
        { status: response.status }
      );
    }
  } catch (error) {
    console.error('‚ùå Error updating vehicle via external API:', error);
    return NextResponse.json(
      { 
        success: false, 
        message: 'Failed to update vehicle via external API',
        details: error instanceof Error ? error.message : 'Unknown error'
      },
      { status: 500 }
    );
  }
}

export async function POST(request: NextRequest) {
  try {
    const body = await request.json();
    console.log('üîÑ POST /api/proxy/vehicles - External API with improved error handling');
    console.log('üìù Request body:', JSON.stringify(body, null, 2));
    
    // ‡πÉ‡∏ä‡πâ External API ‡∏û‡∏£‡πâ‡∏≠‡∏° error handling ‡∏ó‡∏µ‡πà‡∏î‡∏µ‡∏Ç‡∏∂‡πâ‡∏ô
    console.log('üåê Calling external API...');
    
    // ‡πÄ‡∏û‡∏¥‡πà‡∏° timeout
    const controller = new AbortController();
    const timeoutId = setTimeout(() => controller.abort(), 30000); // 30 second timeout
    
    const response = await fetch(`${EXTERNAL_API_BASE}/vehicles`, {
      method: 'POST',
      headers: {
        'Content-Type': 'application/json',
      },
      body: JSON.stringify(body),
      signal: controller.signal,
    });

    clearTimeout(timeoutId);
    console.log('üåê External API response status:', response.status);

    if (response.ok) {
      const data = await response.json();
      console.log('‚úÖ External API success');
      return NextResponse.json(data);
    } else {
      console.log('‚ùå External API failed with status:', response.status);
      const errorText = await response.text();
      console.log('‚ùå Error response:', errorText);
      
      return NextResponse.json(
        { 
          success: false, 
          message: `External API failed with status ${response.status}`,
          details: errorText
        },
        { status: response.status }
      );
    }
  } catch (error) {
    console.error('‚ùå Error creating vehicle via external API:', error);
    return NextResponse.json(
      { 
        success: false, 
        message: 'Failed to create vehicle via external API',
        details: error instanceof Error ? error.message : 'Unknown error'
      },
      { status: 500 }
    );
  }
}